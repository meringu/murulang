main = (fib 11 == fibr 11) ? add complex five : 0

complex = add (add 1 3) five

add x y = x + y

five = 5

# Nasty ternary one liner
fibr :: int -> int # need a type sig for some recursive functions
fibr n = (n == 0) ? 0 : ((n == 1) ? 1 : (fibr (n - 1) + fibr (n - 2)))

# Multiline function parameter matching
fib 0 = 0
fib 1 = 1
fib n = fib (n - 1) + fib (n - 2)
