test -> int { 0 }

# all muru programs need an exported main
main -> int {
    (fib(11,) == 89)
    ? add(complex(), five(),)
    : 0
}

# this function is making another function calls
complex -> int {
    add(
        add(1, 3,),
        five,
    )
}

# some binary operators are availible
add(x: int, y: int,) -> int {
    x() + y()
}

# functions can be as simple as constant values
five -> int {
    5
}

# Nasty ternary one liner
fibr(n: int,) -> int {
    (n() == 0) ? 0 : ((n() == 1) ? 1 : (fibr(n() - 1,) + fibr(n() - 2,)))
}
